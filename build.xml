<?xml version="1.0" encoding="UTF-8"?>

<project name="chess" default="run" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless">

    <property name="verbose.output" value="false"/>
    <property name="build.dir" location="build"/>
    <property name="classes.dir" location="${build.dir}/classes"/>
	<property name="test.classes.dir" location="build/tests" />
	<property name="test.dir" location="test" />
	<property name="report.dir" location="report" />
    <property name="jar.dir" location="${build.dir}/jar"/>
    <property name="dist.lib.dir" location="${build.dir}/lib"/>
    <property name="dependency.file" value="dependencies-all.jar"/>
    <property name="src.dir" location="src"/>
    <property name="lib.dir" location="lib"/>
    <property name="assets.dir" location="${src.dir}/assets"/>
    <property name="doc.dir" location="doc"/>
    <property name="jar.file" value="chess.jar"/>

    <path id="classpath.base">
        <pathelement location="${classes.dir}"/>
    </path>

	<path id="classpath.test">
		<pathelement location="${user.home}/.ant/lib/ant-junit.jar"/>
		<pathelement location="${user.home}/.ant/lib/junit.jar"/>
		<pathelement location="${test.classes.dir}"/>
		<path refid="classpath.base"/>
	</path>

	<available classname="org.junit.runner.Runner" property="junit.installed"/>
	<available classname="org.hamcrest.SelfDescribing" property="hamcrest.installed"/>

	<condition property="libs.installed">
		<and>
			<isset property="junit.installed"/>
			<isset property="hamcrest.installed"/>
		</and>
	</condition>

    <target name="copy-dependencies">
        <mkdir dir="${dist.lib.dir}"/>
        <jar jarfile="${dist.lib.dir}/${dependency.file}">
            <zipgroupfileset dir="${lib.dir}">
                <include name="**/*.jar"/>
            </zipgroupfileset>
        </jar>
    </target>

    <target name="init" depends="install-junit" description="Create directories">
        <mkdir dir="${src.dir}"/>
        <mkdir dir="${assets.dir}"/>
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${report.dir}"/>
    </target>

	<target name="install-junit" unless="libs.installed" >
		<mkdir dir="${user.home}/.ant/lib"/>
		<get dest="${user.home}/.ant/lib/hamcrest-core.jar" src="http://search.maven.org/remotecontent?filepath=org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" unless:set="hamcrest.installed"/>
		<get dest="${user.home}/.ant/lib/ant-junit.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ant/ant-junit/1.9.6/ant-junit-1.9.6.jar" unless:set="junit.installed"/>
		<get dest="${user.home}/.ant/lib/junit.jar" src="http://search.maven.org/remotecontent?filepath=junit/junit/4.12/junit-4.12.jar" unless:set="junit.installed"/>

		<fail message="Required Libraries installed. Please run the build again"/>
	</target>

    <target name="clean" description="Clean the project (Remove build files &amp; docs)">
        <delete dir="${build.dir}"/>
        <delete dir="${doc.dir}"/>
    </target>

    <target name="compile" depends="init" description="Compile the code into classes (build/classes/)">
        <javac srcdir="${src.dir}" destdir="${classes.dir}" verbose="${verbose.output}" includeantruntime="false">
            <classpath refid="classpath.base"/>
        </javac>
    </target>

	<target name="compile-test" depends="compile">
		<javac srcdir="${test.dir}" destdir="${test.classes.dir}" verbose="${verbose.output}" includeantruntime="false" debug="on">
			<classpath refid="classpath.test"/>
		</javac>
	</target>

	<target name="clean-tests">
		<delete dir="${test.classes.dir}"/>
	</target>

	<target name="run-tests" depends="compile-test">
		<junit printsummary="no" haltonfailure="no">
			<classpath refid="classpath.test" />

			<batchtest todir="${report.dir}">
				<fileset dir="${test.classes.dir}">
					<include name="**/*Test*" />
				</fileset>
			</batchtest>

			<formatter type="xml" />
			<formatter type="brief" usefile="false"/>

		</junit>
	</target>

	<target name="test" depends="clean,run-tests" description="Generate Test Report">

		<junitreport todir="${report.dir}">
			<fileset dir="${report.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${report.dir}/html"/>
		</junitreport>

		<delete>
			<fileset dir="${report.dir}" includes="TEST*.xml"/>
		</delete>

	</target>

    <target name="jar" depends="compile, copy-dependencies" description="Bundle classes into a single JAR file (build/jar/)">
        <mkdir dir="${jar.dir}"/>
        <mkdir dir="${dist.lib.dir}"/>
        <jar destfile="${jar.dir}/${jar.file}" basedir="${classes.dir}">
            <fileset dir="${assets.dir}"/>
            <zipfileset src="${dist.lib.dir}/${dependency.file}" excludes="META-INF/*.SF"/>
            <manifest>
                <attribute name="Main-Class" value="edu.kingsu.SoftwareEngineering.Chess.Launcher"/>
            </manifest>
        </jar>
        <chmod file="${jar.dir}/${jar.file}" perm="ugo+x"/>
    </target>

    <target name="run" depends="jar" description="Execute Chess">
        <java jar="${jar.dir}/${jar.file}" fork="true" spawn="false"/>
    </target>

    <target name="javadoc" description="Create the JavaDoc API">
        <javadoc sourcepath="${src.dir}" destdir="${doc.dir}" author="true" version="true" use="true" linksource="yes" windowtitle="Chess Game">
            <link href="https://docs.oracle.com/en/java/javase/11/docs/api"/>
            <bottom><![CDATA[<i>Copyright &#169; 2021 Nikolas Haugrud. All Rights Reserved.</i>]]></bottom>
        </javadoc>
    </target>

</project>
